[tool.ruff]
# By default ruff also respect gitignore files
# Same as Black.
line-length = 88
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`), pycodestyle (`E`, `W`), isort (`I`), pep8-naming (`N`), flake8-bugbear (`B`)
# T201: check for prints, C90: mccabe complexity
select = [
    "F",
    "E",
    "W",
    "I",
    "T201",
    "C90",
    "DTZ",
    "UP",
    "ASYNC",
    "S",
    "B",
    "A",
    "COM",
    "C4",
    "ISC",
    "ICN",
    "INP",
    "PIE",
    "T20",
    "PYI",
    "PT",
    "Q",
    "SLF",
    "SLOT",
    "SIM",
    "TCH",
    "PTH",
    "RUF",
] # "B", "N" to add later
ignore = [
    "E203",
    "E266",
    "E501",
    "F403",
    "S104",
    "B008",
    "C401",
    "ISC001",
    "SIM102",
    "SIM105",
    "RUF012", # We may want to enable "Mutable class attributes should be annotated with `typing.ClassVar`"
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
# Allow `assert` and hardcoded passwords for tests.
"tests/*" = ["S101", "S105", "S106"]
# Allow endpoints, tools and dependencies to raise `HTTPException` after catching an excetion without reraising (`from err`)
"**/endpoints_*" = ["B904"]
"**/cruds_*" = ["B904"]          # TODO: find a better way to handle cruds errors
"app/utils/tools.py" = ["B904"]
"app/dependencies.py" = ["B904"]
# Migrations folder should not really be part of a Python package
"migrations/env.py" = ["INP001"]
# Allow raw SQL for migrations
"migrations/versions/*" = ["S608"]

[tool.ruff.lint.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 18.
max-complexity = 18

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
plugins = ["pydantic.mypy"]
ignore_missing_imports = true
exclude = '''(?x)(
      .git
    | __pycache__
    | .pytest_cache
    | .venv
    | migration
)'''
warn_unreachable = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
filterwarnings = "error"

[tool.coverage.run]
source_pkgs = ["app"]
omit = [
    "main.py",       # Main is just a wrapper and is not used during tests
    "mailworker.py", # We don't use send mails during tests
    "*matrix*",      # We don't send logs to matrix during tests
]
concurrency = [
    "thread",
    "greenlet",
] # Tell the tool that we also use greenlet, because sqlalchemy does


[tool.coverage.report]
# Regexes for lines to exclude from consideration
# See https://coverage.readthedocs.io/en/latest/excluding.html#excluding for more info
exclude_also = []

skip_covered = true
show_missing = true
