"""empty message

Create Date: 2025-02-25 13:45:05.381491
"""

from collections.abc import Sequence
from typing import TYPE_CHECKING, Union

if TYPE_CHECKING:
    from pytest_alembic import MigrationContext

import sqlalchemy as sa
from alembic import op

from app.types.sqlalchemy import TZDateTime

# revision identifiers, used by Alembic.
revision: str = "4ae072a7e867"
down_revision: str | None = "c778706af06f"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "amap_cash",
        "balance",
        existing_type=sa.FLOAT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "amap_order",
        "amount",
        existing_type=sa.FLOAT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "amap_product",
        "price",
        existing_type=sa.FLOAT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "raffle_cash",
        "balance",
        existing_type=sa.FLOAT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "raffle_pack_ticket",
        "price",
        existing_type=sa.FLOAT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "raffle_pack_ticket",
        "price",
        existing_type=sa.Integer(),
        type_=sa.FLOAT(),
        existing_nullable=False,
    )
    op.alter_column(
        "raffle_cash",
        "balance",
        existing_type=sa.Integer(),
        type_=sa.FLOAT(),
        existing_nullable=False,
    )
    op.alter_column(
        "amap_product",
        "price",
        existing_type=sa.Integer(),
        type_=sa.FLOAT(),
        existing_nullable=False,
    )
    op.alter_column(
        "amap_order",
        "amount",
        existing_type=sa.Integer(),
        type_=sa.FLOAT(),
        existing_nullable=False,
    )
    op.alter_column(
        "amap_cash",
        "balance",
        existing_type=sa.Integer(),
        type_=sa.FLOAT(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def pre_test_upgrade(
    alembic_runner: "MigrationContext",
    alembic_connection: sa.Connection,
) -> None:
    pass


def test_upgrade(
    alembic_runner: "MigrationContext",
    alembic_connection: sa.Connection,
) -> None:
    pass
