"""MyECLPay-transaction-detail

Create Date: 2025-06-03 23:06:23.713210
"""

from collections.abc import Sequence
from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from pytest_alembic import MigrationContext

import sqlalchemy as sa
from alembic import op

from app.types.sqlalchemy import TZDateTime

# revision identifiers, used by Alembic.
revision: str = "d14266761430"
down_revision: str | None = "ea26eebe3f8d"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "myeclpay_transaction",
        sa.Column("qr_code_id", sa.Uuid(), nullable=True),
    )
    op.add_column(
        "myeclpay_used_qrcode",
        sa.Column("qr_code_tot", sa.Integer(), nullable=True),
    )
    op.add_column(
        "myeclpay_used_qrcode",
        sa.Column("qr_code_iat", TZDateTime(), nullable=True),
    )
    op.add_column(
        "myeclpay_used_qrcode",
        sa.Column("qr_code_key", sa.Uuid(), nullable=True),
    )
    op.add_column(
        "myeclpay_used_qrcode",
        sa.Column("qr_code_store", sa.Boolean(), nullable=True),
    )
    op.add_column(
        "myeclpay_used_qrcode",
        sa.Column("signature", sa.String(), nullable=True),
    )
    op.create_foreign_key(
        "myeclpay_transaction_qr_code_id_fkey",
        "myeclpay_transaction",
        "myeclpay_used_qrcode",
        ["qr_code_id"],
        ["qr_code_id"],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "myeclpay_transaction_qr_code_id_fkey",
        "myeclpay_transaction",
        type_="foreignkey",
    )
    op.drop_column("myeclpay_used_qrcode", "signature")
    op.drop_column("myeclpay_used_qrcode", "qr_code_store")
    op.drop_column("myeclpay_used_qrcode", "qr_code_key")
    op.drop_column("myeclpay_used_qrcode", "qr_code_iat")
    op.drop_column("myeclpay_used_qrcode", "qr_code_tot")
    op.drop_column("myeclpay_transaction", "qr_code_id")
    # ### end Alembic commands ###


def pre_test_upgrade(
    alembic_runner: "MigrationContext",
    alembic_connection: sa.Connection,
) -> None:
    pass


def test_upgrade(
    alembic_runner: "MigrationContext",
    alembic_connection: sa.Connection,
) -> None:
    pass
