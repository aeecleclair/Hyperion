"""cmm

Create Date: 2025-02-15 17:56:46.270061
"""

from collections.abc import Sequence
from enum import Enum
from typing import TYPE_CHECKING, Union

if TYPE_CHECKING:
    from pytest_alembic import MigrationContext

import sqlalchemy as sa
from alembic import op

from app.types.sqlalchemy import TZDateTime

# revision identifiers, used by Alembic.
revision: str = "43baf64975fe"
down_revision: str | None = "c778706af06f"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


class MemeStatus(Enum):
    neutral = "neutral"
    banned = "banned"


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "cmm_ban",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("creation_time", TZDateTime(), nullable=False),
        sa.Column("end_time", TZDateTime(), nullable=True),
        sa.Column("admin_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["admin_id"], ["core_user.id"]),
        sa.ForeignKeyConstraint(["user_id"], ["core_user.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "cmm_meme",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(MemeStatus, name="memestatus"),
            nullable=False,
        ),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("creation_time", TZDateTime(), nullable=False),
        sa.Column("vote_score", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["core_user.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "cmm_vote",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("meme_id", sa.Uuid(), nullable=False),
        sa.Column("positive", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(["meme_id"], ["cmm_meme.id"]),
        sa.ForeignKeyConstraint(["user_id"], ["core_user.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("cmm_vote")
    op.drop_table("cmm_meme")
    op.drop_table("cmm_ban")
    sa.Enum(MemeStatus).drop(op.get_bind())
    # ### end Alembic commands ###


def pre_test_upgrade(
    alembic_runner: "MigrationContext",
    alembic_connection: sa.Connection,
) -> None:
    pass


def test_upgrade(
    alembic_runner: "MigrationContext",
    alembic_connection: sa.Connection,
) -> None:
    pass
