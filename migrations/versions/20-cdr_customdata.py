"""temp

Create Date: 2024-08-24 01:26:35.063434
"""

from collections.abc import Sequence
from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from pytest_alembic import MigrationContext

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "7336e674441f"
down_revision: str | None = "9d7d834743d1"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("cdr_customdata")
    op.drop_table("cdr_customdata_field")
    op.create_table(
        "cdr_customdata_field",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("product_id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["cdr_product.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "cdr_customdata",
        sa.Column("field_id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("value", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["core_user.id"]),
        sa.ForeignKeyConstraint(["field_id"], ["cdr_customdata_field.id"]),
        sa.PrimaryKeyConstraint("field_id", "user_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("cdr_customdata")
    op.drop_table("cdr_customdata_field")
    op.create_table(
        "cdr_customdata_field",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("seller_id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["seller_id"],
            ["cdr_seller.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "cdr_customdata",
        sa.Column("field_id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("value", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["core_user.id"]),
        sa.ForeignKeyConstraint(["field_id"], ["cdr_customdata_field.id"]),
        sa.PrimaryKeyConstraint("field_id", "user_id"),
    )
    # ### end Alembic commands ###


def pre_test_upgrade(
    alembic_runner: "MigrationContext",
    alembic_connection: sa.Connection,
) -> None:
    pass


def test_upgrade(
    alembic_runner: "MigrationContext",
    alembic_connection: sa.Connection,
) -> None:
    pass
