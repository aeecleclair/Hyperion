"""permissions

Create Date: 2025-03-10 21:30:48.890171
"""

from collections.abc import Sequence
from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from pytest_alembic import MigrationContext

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "1051d705419e"
down_revision: str | None = "c778706af06f"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "core_permission",
        sa.Column("permission_name", sa.String(), nullable=False),
        sa.Column("group_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["group_id"], ["core_group.id"]),
        sa.PrimaryKeyConstraint("permission_name", "group_id"),
    )
    op.create_index(
        op.f("ix_core_permission_group_id"),
        "core_permission",
        ["group_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_core_permission_permission_name"),
        "core_permission",
        ["permission_name"],
        unique=False,
    )
    op.drop_table("campaign_voter_groups")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "campaign_voter_groups",
        sa.Column("group_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("group_id", name="campaign_voter_groups_pkey"),
    )
    op.drop_index(
        op.f("ix_core_permission_permission_name"),
        table_name="core_permission",
    )
    op.drop_index(op.f("ix_core_permission_group_id"), table_name="core_permission")
    op.drop_table("core_permission")
    # ### end Alembic commands ###


def pre_test_upgrade(
    alembic_runner: "MigrationContext",
    alembic_connection: sa.Connection,
) -> None:
    pass


def test_upgrade(
    alembic_runner: "MigrationContext",
    alembic_connection: sa.Connection,
) -> None:
    pass
