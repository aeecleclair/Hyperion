"""versionning-cdr

Create Date: 2025-08-12 21:28:33.755307
"""

from collections.abc import Sequence
from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from pytest_alembic import MigrationContext

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "1294f07e0c02"
down_revision: str | None = "98e2557c00c8"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    current_year = 2024

    op.add_column("cdr_product", sa.Column("year", sa.Integer(), nullable=True))
    op.add_column("cdr_payment", sa.Column("year", sa.Integer(), nullable=True))
    op.add_column("cdr_product_variant", sa.Column("year", sa.Integer(), nullable=True))

    op.execute(f"UPDATE cdr_product SET year = {current_year}")
    op.execute(f"UPDATE cdr_payment SET year = {current_year}")
    op.execute(f"UPDATE cdr_product_variant SET year = {current_year}")

    op.alter_column("cdr_product", "year", nullable=False)
    op.alter_column("cdr_payment", "year", nullable=False)
    op.alter_column("cdr_product_variant", "year", nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("cdr_product", "year")
    op.drop_column("cdr_product_variant", "year")
    op.drop_column("cdr_payment", "year")
    # ### end Alembic commands ###


def pre_test_upgrade(
    alembic_runner: "MigrationContext",
    alembic_connection: sa.Connection,
) -> None:
    pass


def test_upgrade(
    alembic_runner: "MigrationContext",
    alembic_connection: sa.Connection,
) -> None:
    pass
