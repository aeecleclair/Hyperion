"""14-reception-route

Create Date: 2024-05-21 15:56:00.444337
"""

from collections.abc import Sequence
from enum import Enum
from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from pytest_alembic import MigrationContext

import sqlalchemy as sa
from alembic import op

from app.types.sqlalchemy import TZDateTime

# revision identifiers, used by Alembic.
revision: str = "5d05a19f14bc"
down_revision: str | None = "fce1716123e2"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


class AvailableMembership(Enum):
    aeecl = "AEECL"
    useecl = "USEECL"


class PaymentType(Enum):
    cash = "cash"
    check = "check"
    helloasso = "HelloAsso"
    card = "card"
    archived = "archived"


class DocumentSignatureType(Enum):
    physical = "physical"
    material = "material"


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "reception_curriculum",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "reception_document",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "reception_status",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("editable", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "reception_curriculum_membership",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("curriculum_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["curriculum_id"], ["reception_curriculum.id"]),
        sa.ForeignKeyConstraint(["user_id"], ["core_user.id"]),
        sa.PrimaryKeyConstraint("user_id", "curriculum_id"),
    )
    op.create_table(
        "reception_membership",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column(
            "membership",
            sa.Enum(AvailableMembership, name="availablemembership"),
            nullable=False,
        ),
        sa.Column("start_date", TZDateTime(), nullable=False),
        sa.Column("end_date", TZDateTime(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["core_user.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_reception_membership_membership"),
        "reception_membership",
        ["membership"],
        unique=False,
    )
    op.create_table(
        "reception_payment",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("total", sa.Integer(), nullable=False),
        sa.Column(
            "payment_type",
            sa.Enum(
                PaymentType,
                name="paymenttype",
            ),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["user_id"], ["core_user.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_reception_payment_payment_type"),
        "reception_payment",
        ["payment_type"],
        unique=False,
    )
    # FIXME: The following table is missing the products column
    op.create_table(
        "reception_seller",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("group_id", sa.String(), nullable=False),
        sa.Column("order", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["group_id"], ["core_group.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "reception_signature",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("document_id", sa.UUID(), nullable=False),
        sa.Column(
            "signature_type",
            sa.Enum(DocumentSignatureType, name="documentsignaturetype"),
            nullable=False,
        ),
        sa.Column("numeric_signature_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(["document_id"], ["reception_document.id"]),
        sa.ForeignKeyConstraint(["user_id"], ["core_user.id"]),
        sa.PrimaryKeyConstraint("user_id", "document_id"),
    )
    op.create_index(
        op.f("ix_reception_signature_signature_type"),
        "reception_signature",
        ["signature_type"],
        unique=False,
    )
    op.create_table(
        "reception_product",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("seller_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("public_display", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(["seller_id"], ["reception_seller.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "reception_document_constraint",
        sa.Column("product_id", sa.Uuid(), nullable=False),
        sa.Column("document_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(["document_id"], ["reception_document.id"]),
        sa.ForeignKeyConstraint(["product_id"], ["reception_product.id"]),
        sa.PrimaryKeyConstraint("product_id", "document_id"),
    )
    op.create_table(
        "reception_product_constraint",
        sa.Column("product_id", sa.UUID(), nullable=False),
        sa.Column("product_constraint_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["product_constraint_id"], ["reception_product.id"]),
        sa.ForeignKeyConstraint(["product_id"], ["reception_product.id"]),
        sa.PrimaryKeyConstraint("product_id", "product_constraint_id"),
    )
    op.create_table(
        "reception_product_variant",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("product_id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("price", sa.Integer(), nullable=False),
        sa.Column("enabled", sa.Boolean(), nullable=False),
        sa.Column("unique", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(["product_id"], ["reception_product.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "reception_allowed_curriculum",
        sa.Column("product_variant_id", sa.Uuid(), nullable=False),
        sa.Column("curriculum_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(["curriculum_id"], ["reception_curriculum.id"]),
        sa.ForeignKeyConstraint(
            ["product_variant_id"],
            ["reception_product_variant.id"],
        ),
        sa.PrimaryKeyConstraint("product_variant_id", "curriculum_id"),
    )
    op.create_table(
        "reception_purchase",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("product_variant_id", sa.UUID(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("paid", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["product_variant_id"],
            ["reception_product_variant.id"],
        ),
        sa.ForeignKeyConstraint(["user_id"], ["core_user.id"]),
        sa.PrimaryKeyConstraint("user_id", "product_variant_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("reception_purchase")
    op.drop_table("reception_allowed_curriculum")
    op.drop_table("reception_product_variant")
    op.drop_table("reception_product_constraint")
    op.drop_table("reception_document_constraint")
    op.drop_table("reception_product")
    op.drop_index(
        op.f("ix_reception_signature_signature_type"),
        table_name="reception_signature",
    )
    op.drop_table("reception_signature")
    op.drop_table("reception_seller")
    op.drop_index(
        op.f("ix_reception_payment_payment_type"),
        table_name="reception_payment",
    )
    op.drop_table("reception_payment")
    op.drop_index(
        op.f("ix_reception_membership_membership"),
        table_name="reception_membership",
    )
    op.drop_table("reception_membership")
    op.drop_table("reception_curriculum_membership")
    op.drop_table("reception_status")
    op.drop_table("reception_document")
    op.drop_table("reception_curriculum")

    sa.Enum(AvailableMembership, name="availablemembership").drop(op.get_bind())
    sa.Enum(PaymentType, name="paymenttype").drop(op.get_bind())
    sa.Enum(DocumentSignatureType, name="documentsignaturetype").drop(op.get_bind())
    # ### end Alembic commands ###


def pre_test_upgrade(
    alembic_runner: "MigrationContext",
    alembic_connection: sa.Connection,
) -> None:
    pass


def test_upgrade(
    alembic_runner: "MigrationContext",
    alembic_connection: sa.Connection,
) -> None:
    pass
